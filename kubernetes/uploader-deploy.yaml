apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: uploads-claim
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 1Gi
  storageClassName: uploads-pv

---
apiVersion: apps/v1
kind: Deployment

metadata:
  name: uploader-app
  labels:
    app: uploader
spec:
  replicas: 1
  selector:
    matchLabels:
      app: uploader-app
  strategy: {}
  template:
    metadata:
      labels:
        app: uploader-app
    spec:
      containers:
      - image: paulb314/uploader-app
        name: uploader-app
        command: ["yarn"]
        args: ["start-prod"]
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: "0.5"
            memory: "300Mi"
          requests:
            cpu: "0.5"
            memory: "300Mi"
        volumeMounts:
          - name: uploaded
            mountPath: /usr/app/src/uploaded

        env:
          - name: AUTH_PART_MONGO
            valueFrom:
              secretKeyRef:
                name: mongo-secret
                key: AUTH_PART_MONGO
          - name: MONGO_INITDB_DATABASE
            valueFrom:
              secretKeyRef:
                name: mongo-secret
                key: MONGO_INITDB_DATABASE
          - name: MONGO_INITDB_ROOT_USERNAME
            valueFrom:
              secretKeyRef:
                name: mongo-secret
                key: MONGO_INITDB_ROOT_USERNAME
          - name: MONGO_INITDB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mongo-secret
                key: MONGO_INITDB_ROOT_PASSWORD
      volumes:
      - name: uploaded
        persistentVolumeClaim:
          claimName: uploads-claim

status: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: uploader-ingress
  # annotations:
  #   nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: uploader-app
            port:
              number: 3000