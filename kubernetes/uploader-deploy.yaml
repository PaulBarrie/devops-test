apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: uploads-claim
  namespace: polo
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 5Gi
  storageClassName: uploader-pv
  # selector:
  #   matchLabels:
  #     type: local

---
apiVersion: apps/v1
kind: Deployment

metadata:
  name: uploader-app
  labels:
    app: uploader
  namespace: polo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: uploader-app
  strategy: {}
  template:
    metadata:
      labels:
        app: uploader-app
    spec:
      containers:
      - image: paulb314/uploader-app
        name: uploader-app
        command: ["yarn"]
        args: ["start-prod"]
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: "0.5"
            memory: "300Mi"
          requests:
            cpu: "0.5"
            memory: "300Mi"
        volumeMounts:
          - name: uploaded
            mountPath: /usr/app/src/uploaded
        envFrom:
        - secretRef:
            name: mongo-secret
      volumes:
      - name: uploaded
        persistentVolumeClaim:
          claimName: uploads-claim

---
apiVersion: v1
kind: Service
metadata:
  name: uploader-app
  namespace: polo
spec:
  selector:
    app: uploader-app
  type: NodePort
  ports:
  - port: 3000
    targetPort: 3000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-uploader-app
  namespace: polo
  annotations:
    # use the shared ingress-nginx
    kubernetes.io/ingress.class: "nginx"
    ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    cert-manager.io/issuer: "letsencrypt-staging"
    nginx.ingress.kubernetes.io/secure-backends: "false"
spec:
  tls:
    - secretName: uploader-app-tls
      hosts:
        - uploader-app.polo.localhost                                 
  rules:
  - host: uploader-app.polo.localhost
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: uploader-app
            port: 
              number: 3000