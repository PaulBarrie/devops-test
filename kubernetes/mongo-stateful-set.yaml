apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-claim
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 500Mi
  storageClassName: mongo-pv

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  labels:
    app: mongodb
spec:
  selector:
    matchLabels:
      app: mongodb # has to match .spec.template.metadata.labels
  serviceName: mongodb
  replicas: 1 # by default is 1
  updateStrategy:
        type: RollingUpdate
  template:
    metadata:
      labels:
        app: mongodb # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mongodb
        image: "mongo:4.4.0"
        resources:
          limits:
            cpu: "1"
            memory: "300Mi"
          requests:
            cpu: "1"
            memory: "300Mi"
        env:
          - name: AUTH_PART_MONGO
            valueFrom:
              secretKeyRef:
                name: mongo-secret
                key: AUTH_PART_MONGO
          - name: MONGO_INITDB_DATABASE
            valueFrom:
              secretKeyRef:
                name: mongo-secret
                key: MONGO_INITDB_DATABASE
          - name: MONGO_INITDB_ROOT_USERNAME
            valueFrom:
              secretKeyRef:
                name: mongo-secret
                key: MONGO_INITDB_ROOT_USERNAME
          - name: MONGO_INITDB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mongo-secret
                key: MONGO_INITDB_ROOT_PASSWORD
        ports:
        - containerPort: 27017
          name: mongo
        volumeMounts:
          - name: data
            mountPath: "/data/db"

      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: mongo-claim
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: mongodb
# spec:
#   type: ClusterIP
#   ports:
#   - targetPort: 27017
#     port: 27017
#   selector:
#     app: mongodb