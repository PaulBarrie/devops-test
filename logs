NAME: devops-chart
LAST DEPLOYED: Sat Jul 24 14:44:16 2021
NAMESPACE: polo
STATUS: pending-install
REVISION: 1
TEST SUITE: None
USER-SUPPLIED VALUES:
{}

COMPUTED VALUES:
app:
  affinity: {}
  autoscaling:
    enabled: false
    maxReplicas: 100
    minReplicas: 1
    targetCPUUtilizationPercentage: 80
  domain: quelle-indignite.com
  global:
    hostIp: 34.149.247.54
    hostname: quelle-indignite.com
    namespace: polo
    project_id: winged-ratio-312113
  hostname: uploader.quelle-indignite.com
  image:
    name: uploader-app
    registry: paulb314
    tag: latest
  nodeSelector: {}
  ports:
    logstash: 31998
  replicas: 1
  resources:
    cpu: "0.5"
    memory: 300Mi
  service:
    hostname: uploader.quelle-indignite.com
    ingressPort: 443
    loadBalancerIP: 34.142.1.110
    name: uploader-app
    port: 3000
    replicas: 1
    service:
      ingressPort: 443
      loadBalancerIP: 34.142.1.110
      name: uploader-app
      port: 3000
  terminationGracePeriodSeconds: 10
  tolerations: []
  volume:
    accessMode: ReadWriteOnce
    storageRequest: 5Gi
    volumeMode: standard
eck:
  elasticsearch:
    host: elasticsearch.quelle-indignite.com
    port: 9200
    protocol: http
    resources:
      limits:
        cpu: 1
        memory: 4Gi
      requests:
        cpu: 1
        memory: 4Gi
    secrets:
      password: cGFzc3dvcmQtdGVzdAo=
      username: YWRtaW4tdGVzdAo=
  global:
    hostIp: 34.149.247.54
    hostname: quelle-indignite.com
    namespace: polo
    project_id: winged-ratio-312113
  kibana:
    host: kibana.quelle-indignite.com
    name: kibana
    service:
      name: kibana
      port: 5601
  version: 7.13.4
global:
  hostIp: 34.149.247.54
  hostname: quelle-indignite.com
  namespace: polo
  project_id: winged-ratio-312113
ingress:
  annotations: {}
  className: ""
  enabled: false
  global_static_ip_name: quelleindignite
  tls: []
mongo:
  affinity: {}
  autoscaling:
    enabled: false
    maxReplicas: 100
    minReplicas: 1
    targetCPUUtilizationPercentage: 80
  global:
    hostIp: 34.149.247.54
    hostname: quelle-indignite.com
    namespace: polo
    project_id: winged-ratio-312113
  image:
    name: mongo
    tag: 4.4.0
  ingress:
    annotations: {}
    className: ""
    enabled: false
    hosts:
    - host: chart-example.local
      paths:
      - path: /
        pathType: ImplementationSpecific
    tls: []
  nodeSelector: {}
  replicaCount: 1
  resources:
    cpu: "1"
    memory: 300Mi
  service:
    port: 27017
    type: ClusterIP
  terminationGracePeriodSeconds: 10
  tolerations: []
  volume:
    accessMode: ReadWriteOnce
    storageRequest: 1Gi
    volumeMode: standard
secrets:
  mongo:
    AUTH_PART_MONGO: YWRtaW4=
    MONGO_INITDB_DATABASE: dXBsb2FkZXI=
    MONGO_INITDB_ROOT_PASSWORD: YWljMVV5b2g0dnVhMWll
    MONGO_INITDB_ROOT_USERNAME: cm9vdA==

HOOKS:
MANIFEST:
---
# Source: devops-test/charts/eck/templates/secrets.yml
apiVersion: v1
kind: Secret
metadata:
 name: es-credentials
type: Opaque
data:
    ES_USERNAME: YWRtaW4tdGVzdAo=
    ES_PASSWORD: cGFzc3dvcmQtdGVzdAo=
---
# Source: devops-test/templates/secrets.yaml
apiVersion: v1
data:
  
  AUTH_PART_MONGO: YWRtaW4=
  MONGO_INITDB_DATABASE: dXBsb2FkZXI=
  MONGO_INITDB_ROOT_PASSWORD: YWljMVV5b2g0dnVhMWll
  MONGO_INITDB_ROOT_USERNAME: cm9vdA==
kind: Secret
metadata:
  creationTimestamp: null
  name: mongo-secret
  namespace: polo
---
# Source: devops-test/charts/app/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: uploads-claim
  namespace: polo
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# Source: devops-test/charts/mongo/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-claim
  namespace: polo
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: devops-test/charts/app/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: uploader-app
  namespace: polo
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
spec:
  selector:
    app: uploader-app
  type: NodePort
  ports:
  - name: http
    protocol: TCP
    port: 3000
    targetPort: 3000
---
# Source: devops-test/charts/mongo/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: polo
spec:
  type: ClusterIP
  ports:
  - targetPort: 27017
    port: 27017
  selector:
    app: mongodb
---
# Source: devops-test/charts/app/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment

metadata:
  name: uploader-app
  labels:
    app: uploader
  namespace: polo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: uploader-app
  strategy: {}
  template:
    metadata:
      labels:
        app: uploader-app
    spec:
      containers:
      - image: "paulb314/uploader-app:latest"
        name: uploader-app
        command: ["yarn"]
        args: ["start-prod"]
        ports:
          - containerPort: 3000
        resources:
          limits:
                cpu: "0.5"
                memory: 300Mi
          requests:
                cpu: "0.5"
                memory: 300Mi
        volumeMounts:
          - name: uploaded
            mountPath: /usr/app/src/uploaded
        envFrom:
        - secretRef:
            name: mongo-secret
      # - name: filebeat
      #   image: elastic/filebeat:7.8.0
      #   env:
      #   - name: LOGSTASH_HOSTS
      #     value: 34.149.247.54:31998
      #   args: [
      #     "-c", "/etc/filebeat/filebeat.yml",
      #     "-e"
      #   ]
      #   volumeMounts:
      #   - name: log-output
      #     mountPath: /tmp/
      #   - name: beat-config
      #     mountPath: /etc/filebeat/
      volumes:
        - name: uploaded
          persistentVolumeClaim:
            claimName: uploads-claim
      #   - name: log-output
      #     emptyDir: {}
      #   - name: beat-config
      #     configMap:
      #       name: beat-config
      #       items:
      #       - key: filebeat.yml
      #         path: filebeat.yml
---
# Source: devops-test/charts/mongo/templates/stateful-set.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  labels:
    app: mongodb
  namespace: polo
spec:
  selector:
    matchLabels:
      app: mongodb # has to match .spec.template.metadata.labels
  serviceName: mongodb
  replicas: 1
  updateStrategy:
        type: RollingUpdate
  template:
    metadata:
      labels:
        app: mongodb # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mongodb
        image: "mongo:4.4.0"
        resources:
          limits:
            cpu: 1
            memory: 300Mi
          requests:
            cpu: 1
            memory: 300Mi
        envFrom:
        - secretRef:
            name: mongo-secret
        ports:
        - containerPort: 27017
          name: mongo
        volumeMounts:
          - name: data
            mountPath: "/data/db"
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: mongo-claim
---
# Source: devops-test/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-uploader-app
  namespace: polo
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: quelleindignite
    networking.gke.io/managed-certificates: uploader-certificate
spec:
  rules: 
    - host: quelle-indignite.com
      http:
        paths:
        - path: /*  
          pathType: Prefix
          backend:
            service:
              name: uploader-app
              port:
                number: 3000
    - host: "kibana.quelle-indignite.com"
      http:
        paths:
        - path: /*
          pathType: Prefix
          backend:
            service:
              name: kibana
              port: 
                number: 5601
---
# Source: devops-test/charts/eck/templates/elasticsearch.yml
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elasticsearch-sample
spec:
  version: 7.13.4
  nodeSets:
    - name: default
      config:
        node.roles:
          - master
          - data
        node.attr.attr_name: attr_value
        node.store.allow_mmap: false
      podTemplate:
        metadata:
          labels:
            foo: bar
        spec:
          containers:
            - name: elasticsearch
              resources:
                
                limits:
                  cpu: 1
                  memory: 4Gi
                requests:
                  cpu: 1
                  memory: 4Gi
      count: 1
---
# Source: devops-test/charts/eck/templates/kibana.yml
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: Â kibana.quelle-indignite.com
spec:
  version: 7.13.4
  count: 1
  config:
    elasticsearch.hosts:
      - elasticsearch.quelle-indignite.com
    elasticsearch.username: 
    elasticsearch.ssl.certificateAuthorities: /etc/certs/ca.crt
  secureSettings:
    - secretName: kibana-elasticsearch-credentials
  podTemplate:
    spec:
      volumes:
        - name: elasticsearch-certs
          secret:
            secretName: es-credentials
      containers:
        - name: kibana
          volumeMounts:
            - name: elasticsearch-certs
              mountPath: /etc/certs
              readOnly: true
---
# Source: devops-test/charts/app/templates/certificate.yaml
apiVersion: networking.gke.io/v1beta1
kind: ManagedCertificate

metadata:
  name: uploader-certificate
  namespace: polo
spec:
  domains:
    - quelle-indignite.com
---
# Source: devops-test/charts/eck/templates/eck-operator.yml
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: my-elastic-cloud-eck
  namespace: operators
spec:
  channel: stable
  name: elastic-cloud-eck
  source: operatorhubio-catalog
  sourceNamespace: olm

